<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--
    https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-logging
    https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#boot-features-logback-extensions

    https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-features.html#environment-properties
    -->

    <!--
    在 application.yml 中添加

    spring:
      profiles.active: dev
      application.name: xxx

    log:
      level: info          # 项目的日志级别, 默认是 debug
      sqlLevel: info       # sql 日志级别, 高于 debug 级别的将不输出 sql 语句, 默认是 debug
      thirdLevel: error    # 第三方日志级别, 默认是 warn
      filePath: /opt/logs  # 文件存放目录, 默认是 ~/logs
      maxHistory: 30       # 文件最大保存天数, 默认是 15

    当下的日志策略是:
    本地(dev)环境:       项目输出的 debug、第三方包输出的 warn 到控制台
    非本地也非生产环境:   项目输出的 debug、第三方包输出的 warn 到一个文件, 项目运行的 sql 到另一个文件
    生产(prod)环境:      项目输出的 info、warn 到一个文件, 项目的 error 和 第三方输出的 error 到另一个文件
    -->
    <springProperty scope="context" name="applicationProfile" source="spring.profiles.active" defaultValue="dev"/>
    <springProperty scope="context" name="applicationName" source="spring.application.name" defaultValue="log"/>

    <springProperty scope="context" name="logLevel" source="log.level" defaultValue="debug"/>
    <springProperty scope="context" name="sqlLevel" source="log.sqlLevel" defaultValue="debug"/>
    <springProperty scope="context" name="thirdLogLevel" source="log.thirdLevel" defaultValue="warn"/>
    <springProperty scope="context" name="filePath" source="log.filePath" defaultValue="${user.home}/logs"/>
    <springProperty scope="context" name="fileMaxHistory" source="log.maxHistory" defaultValue="15"/>


    <logger name="com.github.common.repository" level="${thirdLogLevel}"/>
    <logger name="com.github.user.repository" level="${thirdLogLevel}"/>
    <logger name="com.github.product.repository" level="${thirdLogLevel}"/>
    <logger name="com.github.order.repository" level="${thirdLogLevel}"/>
    <logger name="com.github.manager.repository" level="${thirdLogLevel}"/>

    <logger name="com.github.common.mvc" level="${thirdLogLevel}"/>

    <logger name="com.baomidou" level="${thirdLogLevel}"/>
    <logger name="com.netflix" level="${thirdLogLevel}"/>
    <logger name="com.github" level="${thirdLogLevel}"/>
    <logger name="com.zaxxer" level="${thirdLogLevel}"/>
    <logger name="com.sun" level="${thirdLogLevel}"/>

    <logger name="org.springframework" level="${thirdLogLevel}"/>
    <logger name="org.hibernate" level="${thirdLogLevel}"/>
    <logger name="org.mybatis" level="${thirdLogLevel}"/>
    <logger name="org.apache" level="${thirdLogLevel}"/>
    <logger name="org.jboss" level="${thirdLogLevel}"/>
    <logger name="org.xnio" level="${thirdLogLevel}"/>

    <logger name="io.undertow" level="${thirdLogLevel}"/>
    <logger name="io.lettuce" level="${thirdLogLevel}"/>
    <logger name="io.netty" level="${thirdLogLevel}"/>
    <logger name="reactor" level="${thirdLogLevel}"/>


    <springProfile name="dev">
        <include resource="org/springframework/boot/logging/logback/defaults.xml" />
        <property name="CONSOLE_LOG_PATTERN" value="%n[%d] [%clr(${PID:- }){magenta} - %clr(%t){blue} - %clr(%logger){cyan} - %clr(${LOG_LEVEL_PATTERN:-%p})]%X{requestInfo}%n%class.%method\\(%file:%line\\)%n%m%n"/>
        <include resource="org/springframework/boot/logging/logback/console-appender.xml" />

        <root level="${logLevel}">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>


    <!-- 输出到文件的地址 -->
    <property name="FILE_PATH" value="${filePath}/${applicationName}-${applicationProfile}"/>
    <!-- 输出到文件时的格式 -->
    <property name="LOG_PATTERN" value="[%d] [\\(${PID:- }\\):\\(%t\\):\\(%logger\\):\\(%p\\)]%X{requestInfo} %class{30}#%method\\(%file:%line\\) %m%n"/>

    <!--
    用 & 貌似有问题. 见:
    https://docs.spring.io/spring-framework/docs/5.3.1/reference/html/core.html#beans-definition-profiles-java
    -->
    <springProfile name="!(dev | prod)">
        <appender name="PROJECT" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${FILE_PATH}.log</file>
            <!-- yyyy-MM-dd_HH 每小时建一个, yyyy-MM-dd_HH-mm 每分钟建一个 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${FILE_PATH}-%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>${fileMaxHistory}</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOG_PATTERN}</pattern>
            </encoder>
        </appender>

        <appender name="SQL" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${FILE_PATH}-sql.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${FILE_PATH}-sql-%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>${fileMaxHistory}</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>%n[%d{yyyy-MM-dd HH:mm:ss.SSS}] [\\(${PID:- }\\):\\(%t\\):\\(%logger\\):\\(%p\\)] %class.%method\\(%file:%line\\) %m%n</pattern>
            </encoder>
        </appender>
        <logger name="sqlLog" level="${sqlLevel}" additivity="false">
            <appender-ref ref="SQL" />
        </logger>

        <root level="debug">
            <appender-ref ref="PROJECT"/>
        </root>
    </springProfile>

    <springProfile name="prod">
        <appender name="PROJECT" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- 不输出 error 级别 -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>DENY</onMatch>
                <onMismatch>ACCEPT</onMismatch>
            </filter>

            <file>${FILE_PATH}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${FILE_PATH}-%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>${fileMaxHistory}</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOG_PATTERN}</pattern>
            </encoder>
        </appender>
        <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
            <discardingThreshold>0</discardingThreshold>
            <includeCallerData>true</includeCallerData>
            <appender-ref ref ="PROJECT"/>
        </appender>

        <appender name="PROJECT-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- 只输出 error 级别 -->
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>ERROR</level>
            </filter>

            <file>${FILE_PATH}-error.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${FILE_PATH}-error-%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>${fileMaxHistory}</maxHistory>
            </rollingPolicy>
            <encoder>
                <pattern>${LOG_PATTERN}</pattern>
            </encoder>
        </appender>
        <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
            <discardingThreshold>0</discardingThreshold>
            <includeCallerData>true</includeCallerData>
            <appender-ref ref ="PROJECT-ERROR"/>
        </appender>

        <root level="${logLevel}">
            <appender-ref ref="ASYNC"/>
            <appender-ref ref="ASYNC-ERROR"/>
        </root>
    </springProfile>
</configuration>
